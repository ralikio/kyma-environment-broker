// Code generated by mockery v2.42.1. DO NOT EDIT.

package automock

import (
	edp "github.com/kyma-project/kyma-environment-broker/internal/edp"
	logrus "github.com/sirupsen/logrus"

	mock "github.com/stretchr/testify/mock"
)

// EDPClient is an autogenerated mock type for the EDPClient type
type EDPClient struct {
	mock.Mock
}

// CreateDataTenant provides a mock function with given fields: data, log
func (_m *EDPClient) CreateDataTenant(data edp.DataTenantPayload, log logrus.FieldLogger) error {
	ret := _m.Called(data, log)

	if len(ret) == 0 {
		panic("no return value specified for CreateDataTenant")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(edp.DataTenantPayload, logrus.FieldLogger) error); ok {
		r0 = rf(data, log)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateMetadataTenant provides a mock function with given fields: name, env, data, log
func (_m *EDPClient) CreateMetadataTenant(name string, env string, data edp.MetadataTenantPayload, log logrus.FieldLogger) error {
	ret := _m.Called(name, env, data, log)

	if len(ret) == 0 {
		panic("no return value specified for CreateMetadataTenant")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, edp.MetadataTenantPayload, logrus.FieldLogger) error); ok {
		r0 = rf(name, env, data, log)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteDataTenant provides a mock function with given fields: name, env, log
func (_m *EDPClient) DeleteDataTenant(name string, env string, log logrus.FieldLogger) error {
	ret := _m.Called(name, env, log)

	if len(ret) == 0 {
		panic("no return value specified for DeleteDataTenant")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, logrus.FieldLogger) error); ok {
		r0 = rf(name, env, log)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteMetadataTenant provides a mock function with given fields: name, env, key, log
func (_m *EDPClient) DeleteMetadataTenant(name string, env string, key string, log logrus.FieldLogger) error {
	ret := _m.Called(name, env, key, log)

	if len(ret) == 0 {
		panic("no return value specified for DeleteMetadataTenant")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, string, logrus.FieldLogger) error); ok {
		r0 = rf(name, env, key, log)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewEDPClient creates a new instance of EDPClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEDPClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *EDPClient {
	mock := &EDPClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
